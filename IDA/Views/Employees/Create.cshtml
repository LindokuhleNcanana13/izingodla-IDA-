@model IDA.Models.Employee

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <main class="pt-5 mx-sm-5">
        <div id="page-content-wrapper">
            <br /> <br />
            <div class="card mb-4 wow fadeIn">
                <!--Card content-->
                <div style="text-align:center;" class="card-body d-sm-flex justify-content-between">
                    <h4 class="mb-2 mb-sm-0 pt-1">
                        <a style="color:orangered; "> Add Employee</a>

                    </h4>

                </div>
            </div>


            <br />

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="jumbotron">
                    <div class="form-horizontal">
                        @if (ViewBag.MessageError != null && ViewBag.MessageError == "User with this email already exists!!")
                        {
                            <div class="alert alert-danger">
                                <a class="close" data-dismiss="alert">×</a>
                                @ViewBag.MessageError
                            </div>
                        }
                    <div class="form-row">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-10" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-10" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                            </div>
                            </div>
                        </div>
                    </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = true, @type = "email" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                    @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-12">
                                    <select class="form-control" id="dropdown" required="true" name="@Html.NameFor(model => model.Gender)" >
                                        <option value="0">Choose</option>
                                        <option value="Male">Male</option>
                                        <option value="Female">Female</option>


                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.IDNumber, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.IDNumber, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                    @Html.ValidationMessageFor(model => model.IDNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">

                                @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-12">
                                    <select class="form-control" id="dropdown" required="true" name="@Html.NameFor(model => model.Position)">
                                        <option value="0">Choose</option>
                                        <option value="admin">Admin</option>
                                        <option value="financeManager">Finance Manager</option>
                                        <option value="logisticManager">Logistic Manager</option>
                                        <option value="designer">Designer</option>
                                        <option value="qualityEngineer">Quality Engineer</option>
                                        <option value="other">Other</option>


                                    </select>
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-12">
                                    <input type="date" @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                           @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                            <div class="form-group col-md-6">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-success" />
                                    <a class="btn btn-primary" @Html.ActionLink("Back to List", "Index")
                                </div>
                            </div>
                        </div>
                    
            }

            
               
            </div>
           
</main>