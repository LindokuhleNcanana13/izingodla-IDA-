@model IDA.Models.LogisticBooking

@{
    ViewBag.Title = "BookVehicle";
    Layout = "~/Views/Shared/StuffLayout.cshtml";
}
<link href="css/addons/datatables2.min.css" rel="stylesheet">
<link href="~/MD/css/addons/datatables.min.css" rel="stylesheet" />
<link href="~/Content/sweetalert/sweet-alert.css" rel="stylesheet" />
<link rel="stylesheet" href="	https://cdnjs.cloudflare.com/ajax/libs/bootstrap-sweetalert/1.0.1/sweetalert.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-sweetalert/1.0.1/sweetalert.min.js"></script>
<!-- DataTables JS -->
<script src="js/addons/datatables2.min.js" type="text/javascript"></script>

<script src="~/MD/js/addons/datatables2.min.js"></script>
<main class="pt-5 mx-sm-4">
    <link href="~/Content/css/modalStyle.css" rel="stylesheet" />
    <div id="page-content-wrapper">
        <br /> <br />
        <div class="card mb-4 wow fadeIn">
            <!--Card content-->
            <div style="text-align:center;" class="card-body d-sm-flex justify-content-between">
                <h4 class="mb-2 mb-sm-0 pt-1">
                    <a style="color:orangered; ">Book Vehicle</a>
                </h4>
               
                <div class="btn-group mr-2">
                    <a href="@Url.Action("ViewTask","Staff", new { id = Session["ProjectId"]})" style="border-radius:10px;" class="list-group-item active waves-effect">
                        <i class="fa fa-arrow-left mr-1" style="color:white;"></i>Back
                    </a>
                </div>
            </div>
        </div>
        <br />
    </div>
    @if (TempData["Success"] != null && TempData["Success"].Equals("Booked Successfully"))
    {
        <script type="text/javascript">

           $(document).ready(function () {

               swal({
                        position: 'top-end',
                        title: "@Session["Name"]",
                        text: "Your booking has been submitted",
                        type: "success",
                         showConfirmButton: false,
                        timer: 2000
                    },

                );

                   //Swal({
                   //   position: 'top-end',
                   //   type: "success",
                   //   title: 'Your Time Sheet has been sent',
                   //   showConfirmButton: false,
                   //   timer: 1500
                   // })

                });

        </script>
    }

    <div class="jumbotron">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@



                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label class="control-label col-md-6">What will you use the Vehicle for?</label>

                        <div class="col-md-10">

                            @Html.TextAreaFor(model => model.ReasonForBooking, 3, 53, new { htmlAttributes = new { @class = "form-control", style = "width: 500px;" }, @required = true })
                            @Html.ValidationMessageFor(model => model.ReasonForBooking, "", new { @class = "text-danger" })
                        </div>

                        @*@Html.LabelFor(model => model.ReasonForBooking, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        @*<div class="col-md-10">
                                @Html.EditorFor(model => model.ReasonForBooking, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ReasonForBooking, "", new { @class = "text-danger" })
                            </div>*@
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                            @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-row">

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                            @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group col-md-5">
                        <label class="control-label col-md-4">Choose Vehicle</label>
                        <input type="hidden" id="valueGet" @*readonly="readonly"*@ name="valueG" />
                        <div class="col-md-12">
                            @Html.DropDownList("VehicleId", ViewBag.ChooseVehicle as SelectList, "---- CHOOSE Vehicle ----", new { @onChange = "selectedText(this)", @class = "form-control", @required = true })
                            @*@Html.DropDownList("chooseSite", ViewBag.chooseSite as SelectList, "---- CHOOSE SITE ----", new { @class = "form-control" })*@
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-default" />
                        <a class="btn btn-primary" href="@Url.Action("ViewTask","Staff", new { id = Session["ProjectId"]})">Back</a>


                    </div>
                </div>
            </div>
        }
    </div>

</main>